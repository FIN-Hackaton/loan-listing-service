{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["NaverMapAPI","mapDivId","style","width","height","defaultCenter","lat","lng","defaultZoom","App","useState","message","setMessage","useEffect","fetch","then","response","text","className","src","logo","alt","href","target","rel","ncpClientId","error","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,MAA0B,iC,uBCKzC,SAASA,IACP,OACE,cAAC,IAAD,CACEC,SAAU,oCACVC,MAAO,CACLC,MAAO,OACPC,OAAQ,QAEVC,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCC,YAAa,KA8CJC,MAzCf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRC,MAAM,cACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAJ,GACJC,EAAWD,QAEd,IAGD,sBAAKO,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,oBAAIH,UAAU,YAAd,SAA2BP,IAC3B,oBAAGO,UAAU,YAAb,UACE,sCACO,8CADP,0BAGA,mBACEA,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BAUJ,cAAC,IAAD,CACEC,YAAa,aACbC,MAAO,gDACPC,QAAS,gDAHX,SAKE,cAAC3B,EAAD,UC1CO4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bfbcc3f1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { RenderAfterNavermapsLoaded, NaverMap } from \"react-naver-maps\"; // 패키지 불러오기\n\nfunction NaverMapAPI() {\n  return (\n    <NaverMap\n      mapDivId={\"maps-getting-started-uncontrolled\"} // default: react-naver-map\n      style={{\n        width: \"100%\", // 네이버지도 가로 길이\n        height: \"85vh\", // 네이버지도 세로 길이\n      }}\n      defaultCenter={{ lat: 37.554722, lng: 126.970833 }} // 지도 초기 위치\n      defaultZoom={13} // 지도 초기 확대 배율\n    />\n  );\n}\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/hello\")\n      .then(response => response.text())\n      .then(message => {\n        setMessage(message);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"App-title\">{message}</h1>\n        <p className=\"App-intro\">\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </p>\n      </header>\n      <RenderAfterNavermapsLoaded\n        ncpClientId={\"drgyzrzre5\"} // 자신의 네이버 계정에서 발급받은 Client ID\n        error={<p>Maps Load Error</p>}\n        loading={<p>Maps Loading...</p>}\n      >\n        <NaverMapAPI />\n      </RenderAfterNavermapsLoaded>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}